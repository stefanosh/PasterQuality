{
    "config": {
        "base_config": {
            "data": {
                "normalization": "quantile",
                "path": "data/new_recorder_whole_merged_batches",
                "y_policy": "mean_std"
            },
            "model": {
                "batch_momentum": 0.95,
                "virtual_batch_size": 4
            },
            "seed": 0,
            "training": {
                "batch_size": 32,
                "display_steps": 100,
                "epochs": 50000,
                "grad_thresh": 2000.0,
                "patience": 16
            }
        },
        "optimization": {
            "options": {
                "n_trials": 100
            },
            "sampler": {
                "seed": 0
            },
            "space": {
                "model": {
                    "feature_dim": [
                        "categorical",
                        [
                            8,
                            16,
                            32,
                            64,
                            128
                        ]
                    ],
                    "num_decision_steps": [
                        "int",
                        3,
                        10
                    ],
                    "relaxation_factor": [
                        "uniform",
                        1,
                        2
                    ]
                },
                "training": {
                    "schedule": {
                        "decay_rate": [
                            "uniform",
                            0.4,
                            0.95
                        ],
                        "decay_steps": [
                            "categorical",
                            [
                                100,
                                500,
                                2000
                            ]
                        ],
                        "learning_rate": [
                            "uniform",
                            0.001,
                            0.01
                        ]
                    },
                    "sparsity_loss_weight": [
                        "loguniform",
                        1e-06,
                        0.1
                    ]
                }
            }
        },
        "program": "bin/tabnet.py"
    },
    "environment": {},
    "best_stats": {
        "dataset": "data/new_recorder_whole_merged_batches",
        "algorithm": "tabnet",
        "config": {
            "data": {
                "normalization": "quantile",
                "path": "data/new_recorder_whole_merged_batches",
                "y_policy": "mean_std"
            },
            "model": {
                "batch_momentum": 0.95,
                "feature_dim": 128,
                "num_decision_steps": 3,
                "relaxation_factor": 1.205197968598434,
                "virtual_batch_size": 4
            },
            "seed": 0,
            "training": {
                "batch_size": 32,
                "display_steps": 100,
                "epochs": 50000,
                "grad_thresh": 2000.0,
                "patience": 16,
                "schedule": {
                    "decay_rate": 0.6218484592882313,
                    "decay_steps": 100,
                    "learning_rate": 0.008354219449694906
                },
                "sparsity_loss_weight": 0.0001157742185603688
            }
        },
        "environment": {},
        "batch_size": 32,
        "epoch_size": 8,
        "best_epoch": 20,
        "metrics": {
            "train": {
                "rmse": 7.040018699999953,
                "score": -7.040018699999953
            },
            "val": {
                "rmse": 2.4581197276498883,
                "score": -2.4581197276498883
            },
            "test": {
                "rmse": 3.4822917520573746,
                "score": -3.4822917520573746
            }
        },
        "time": "00h 00m 11s",
        "trial_id": 77,
        "tuning_time": "0:27:33"
    },
    "time": "0:33:37"
}
